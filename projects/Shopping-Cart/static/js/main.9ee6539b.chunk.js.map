{"version":3,"sources":["img/shopping-cart-solid.svg","img/bars-solid.svg","img/times-solid.svg","img/search-solid.svg","components/Header.js","services/api.js","components/Loading.js","components/CategoryList.js","components/ProductCard.js","components/ProductSearch.js","components/Home.js","components/Rating.js","components/ProductDetails.js","components/ShoppingCart.js","components/Section.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","menuToggle","toggle","state","setState","sumCartItems","storage","localStorage","total","Object","values","map","e","JSON","parse","reduce","acc","curr","counter","sum","this","className","onClick","aria-hidden","src","Menu","alt","width","to","Close","data-testid","CartIcon","Component","getCategories","a","fetch","response","json","data","getProductsFromCategoryAndQuery","categoryId","query","Loading","CategoryList","categories","status","fetchApi","fetchProducts","props","category","key","id","name","value","target","ProductCard","handleClick","previous","products","title","object","price","thumbnail","attributes","stringify","setItem","shipping","availableQuantity","available_quantity","pathname","free_shipping","toLocaleString","disabled","type","ProductSearch","length","product","defaultProps","Home","request","api","dataProducts","dataApi","results","onSearchTextChange","bind","event","placeholder","onChange","Search","Rating","email","msg","rating","message","ProductDetails","changeState","location","local","getItem","showForm","inputHandler","renderRating","item","index","value_name","required","cols","rows","htmlFor","ShoppingCart","getItemLocalStorage","getProducts","arrayOfproducts","count","handleDelete","removeItem","Math","round","c","find","React","Section","exact","path","component","render","App","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.9ee6539b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shopping-cart-solid.8bf1af37.svg\";","module.exports = __webpack_public_path__ + \"static/media/bars-solid.b3f49afd.svg\";","module.exports = __webpack_public_path__ + \"static/media/times-solid.2c5552a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/search-solid.c6a0effb.svg\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Menu from '../img/bars-solid.svg';\nimport Close from '../img/times-solid.svg';\nimport CartIcon from '../img/shopping-cart-solid.svg';\nimport '../css/Header.css';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      toggle: false,\n      sum: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.sumCartItems();\n  }\n\n  menuToggle = () => {\n    const { toggle } = this.state;\n    this.setState({ toggle: !toggle });\n  }\n\n  sumCartItems = () => {\n    const storage = { ...localStorage };\n    const response = Object.values(storage).map((e) => JSON.parse(e));\n    const total = response.reduce((acc, curr) => acc + curr.counter, 0);\n    this.setState({ sum: total });\n  }\n\n  render() {\n    // Aria-hidden:\n    // https://developers.google.com/web/fundamentals/accessibility/semantics-aria/hiding-and-updating-content?hl=pt-br\n    const { toggle, sum } = this.state;\n    return (\n      <header>\n        <div className=\"menu\" onClick={ this.menuToggle } aria-hidden=\"true\">\n          <img src={ Menu } alt=\"\" width=\"20\" />\n        </div>\n        <div className=\"logo\">\n          <h1><Link to=\"/\">Mercado Livre</Link></h1>\n        </div>\n        <nav>\n          <ul className={ toggle ? 'toggle' : '' }>\n            <li><Link to=\"/home\">Home</Link></li>\n            <li><Link to=\"/product\">Produtos</Link></li>\n            <li><Link to=\"/contact\">Contato</Link></li>\n            <li><Link to=\"/about\">Sobre</Link></li>\n            <li><Link to=\"/login\">Login / Registro</Link></li>\n            <li className=\"close\" onClick={ this.menuToggle } aria-hidden=\"true\">\n              <img src={ Close } alt=\"\" width=\"20\" />\n            </li>\n          </ul>\n          <div data-testid=\"shopping-cart-size\" className=\"nav-cart\">\n            <span data-testid=\"shopping-cart-size\">{ sum }</span>\n            <Link to=\"/cart\">\n              <img src={ CartIcon } alt=\"\" width=\"20\" />\n            </Link>\n          </div>\n        </nav>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","export async function getCategories() {\n  // Implemente aqui\n  const response = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const data = await response.json();\n  return data;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  // Implemente aqui! Quando o fizer, descomente os parâmetros que essa função recebe\n  const response = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n  const data = await response.json();\n  return data;\n}\n","import React, { Component } from 'react';\nimport '../css/Section.css';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className=\"loading\">\n        <img src=\"https://cdn.lowgif.com/small/0534e2a412eeb281-the-counterintuitive-tech-behind-netflix-s-worldwide.gif\" alt=\"loading\" />\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getCategories } from '../services/api';\nimport Loading from './Loading';\nimport '../css/Section.css';\n\nexport default class CategoryList extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      categories: [],\n      status: 'loading',\n    };\n  }\n\n  componentDidMount() {\n    this.fetchApi();\n  }\n\n  async fetchApi() {\n    const data = await getCategories();\n    this.setState({ categories: data, status: false });\n  }\n\n  render() {\n    const { categories, status } = this.state;\n    const { fetchProducts } = this.props;\n\n    if (status === 'loading') {\n      return <Loading />;\n    }\n\n    return (\n      <section className=\"category-section\">\n        <h1>Categorias:</h1>\n        { categories.map((category) => (\n          <option\n            key={ category.id }\n            className=\"label-radio\"\n            data-testid=\"category\"\n            id={ category.id }\n            name=\"category\"\n            value={ category.id }\n            onClick={ ({ target: { value } }) => fetchProducts(value) }\n          >\n            { category.name }\n\n          </option>\n        ))}\n      </section>\n    );\n  }\n}\n\nCategoryList.propTypes = {\n  fetchProducts: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../css/Products.css';\n\nexport default class ProductCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      counter: 1,\n    };\n  }\n\n  handleClick = () => {\n    this.setState((previous) => ({\n      counter: previous.counter + 1,\n    }));\n    const { counter } = this.state;\n    const { products } = this.props;\n    const { title, price, thumbnail, id, attributes } = products;\n    const object = { counter, price, thumbnail, id, attributes, title };\n    const json = JSON.stringify(object);\n    localStorage.setItem(title, json);\n  }\n\n  render() {\n    const { props, state } = this;\n    const { counter } = state;\n    const { products } = this.props;\n    const { title, price, thumbnail, id, attributes, shipping } = products;\n    const availableQuantity = props.available_quantity;\n\n    return (\n      <li className=\"card\">\n        <Link\n          data-testid=\"product-detail-link\"\n          to={ {\n            pathname: `/product/${id}`,\n            state: { title,\n              price,\n              thumbnail,\n              id,\n              attributes,\n              shipping,\n              availableQuantity,\n            },\n          } }\n        >\n          <div data-testid=\"product\" className=\"product\">\n            <img src={ thumbnail } alt={ `Foto do produto ${title}` } />\n            <h3>{ title }</h3>\n            {shipping.free_shipping ? (\n              <p className=\"shipping\" data-testid=\"free-shipping\">Frete Grátis!</p>\n            ) : null}\n            <p>{ `R$ ${price.toLocaleString('pt-BR')}` }</p>\n          </div>\n        </Link>\n        <button\n          disabled={ counter > availableQuantity }\n          className=\"button\"\n          data-testid=\"product-add-to-cart\"\n          onClick={ this.handleClick }\n          type=\"button\"\n        >\n          Adicionar ao Carrinho\n        </button>\n      </li>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  title: PropTypes.string,\n  price: PropTypes.number,\n  thumbnail: PropTypes.string,\n  id: PropTypes.string,\n  free_shipping: PropTypes.bool,\n}.isRequired;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ProductCard from './ProductCard';\n\nclass ProductSearch extends Component {\n  render() {\n    const { products } = this.props;\n    return (\n      <ul className=\"cart-items\">\n        { products.length === 0\n          ? <h4>Nenhum produto foi encontrado</h4>\n          : products.map((product) => (\n            <ProductCard\n              key={ product.id }\n              products={ product }\n            />\n          ))}\n      </ul>\n    );\n  }\n}\n\nProductSearch.propTypes = {\n  products: PropTypes.array,\n}.isRequired;\n\nProductSearch.defaultProps = {\n  products: [],\n};\n\nexport default ProductSearch;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as api from '../services/api';\nimport CategoryList from './CategoryList';\nimport ProductSearch from './ProductSearch';\nimport Search from '../img/search-solid.svg';\nimport '../css/Section.css';\nimport CartIcon from '../img/shopping-cart-solid.svg';\n\nexport default class Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      query: '',\n      categoryId: '',\n      dataApi: [],\n      request: false,\n      sum: 0,\n    };\n\n    this.onSearchTextChange = this.onSearchTextChange.bind(this);\n    this.fetchProducts = this.fetchProducts.bind(this);\n  }\n\n  componentDidMount() {\n    this.sumCartItems();\n  }\n\n  onSearchTextChange(event) {\n    const { target } = event;\n    this.setState({\n      query: target.value,\n    });\n  }\n\n  fetchProducts = async (id) => {\n    const { query, categoryId } = this.state;\n    this.setState({ request: true, categoryId: id },\n      async () => {\n        const dataProducts = await api.getProductsFromCategoryAndQuery(categoryId, query);\n        this.setState({\n          dataApi: dataProducts.results,\n          request: false,\n          query: '',\n        });\n      });\n  }\n\n  sumCartItems = () => {\n    const storage = { ...localStorage };\n    const response = Object.values(storage).map((e) => JSON.parse(e));\n    const total = response.reduce((acc, curr) => acc + curr.counter, 0);\n    this.setState({ sum: total });\n  }\n\n  render() {\n    const { dataApi, request, query, sum } = this.state;\n    return (\n      <>\n        <div className=\"cart-screen\">\n          <span data-testid=\"shopping-cart-size\">{ sum }</span>\n          <Link to=\"/cart\">\n            <button\n              type=\"button\"\n              className=\"cart-scree\"\n              data-testid=\"shopping-cart-button\"\n            >\n              <img src={ CartIcon } alt=\"\" width=\"20\" />\n            </button>\n          </Link>\n        </div>\n        <p className=\"info\" data-testid=\"home-initial-message\">\n          Digite algum termo de pesquisa ou escolha uma categoria.\n        </p>\n        <CategoryList fetchProducts={ this.fetchProducts } />\n\n        <section className=\"searchbar\">\n          <input\n            className=\"search-txt\"\n            placeholder=\"Search\"\n            data-testid=\"query-input\"\n            type=\"text\"\n            onChange={ this.onSearchTextChange }\n\n          />\n          <button\n            className=\"searchbar-btn\"\n            data-testid=\"query-button\"\n            type=\"button\"\n            onClick={ () => this.fetchProducts() }\n            query={ query }\n          >\n            <img src={ Search } alt=\"\" width=\"20\" />\n          </button>\n        </section>\n\n        <ProductSearch products={ dataApi } request={ request } />\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Rating extends Component {\n  constructor(props) {\n    super(props);\n    const { email, msg, rating } = this.props;\n    this.state = {\n      email,\n      message: msg,\n      rating,\n    };\n  }\n\n  render() {\n    const { email, message, rating } = this.state;\n    return (\n      <div>\n        <strong>{ email }</strong>\n        <p>{ message }</p>\n        <p>{ rating }</p>\n      </div>\n    );\n  }\n}\n\nRating.propTypes = {\n  email: PropTypes.string,\n  message: PropTypes.string,\n  rating: PropTypes.number,\n}.isRequired;\n\nexport default Rating;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Rating from './Rating';\nimport '../css/Products.css';\nimport CartIcon from '../img/shopping-cart-solid.svg';\n\nexport default class ProductDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      message: '',\n      rating: 0,\n      showForm: false,\n      counter: 1,\n      sum: 0,\n    };\n\n    this.inputHandler = this.inputHandler.bind(this);\n    this.renderRating = this.renderRating.bind(this);\n  }\n\n  componentDidMount() {\n    this.sumCartItems();\n    this.changeState();\n  }\n\n  changeState = () => {\n    const { location: { state } } = this.props;\n    const { title } = state;\n\n    const local = JSON.parse(localStorage.getItem(title));\n    if (local) {\n      this.setState({ counter: local.counter + 1 });\n    }\n  };\n\n  handleClick = () => {\n    const { location: { state } } = this.props;\n    const { location: { state: { title } } } = this.props;\n    const { counter } = this.state;\n    const local = JSON.parse(localStorage.getItem(title));\n\n    this.setState((previous) => ({ counter: previous.counter + 1 }));\n\n    if (local) {\n      local.counter = counter;\n      localStorage.setItem(title, JSON.stringify(local));\n    } else {\n      const object = { ...state, counter };\n      localStorage.setItem(title, JSON.stringify(object));\n    }\n\n    this.sumCartItems();\n  };\n\n  sumCartItems = () => {\n    const storage = { ...localStorage };\n    const response = Object.values(storage).map((e) => JSON.parse(e));\n    const total = response.reduce((acc, curr) => acc + curr.counter, 0);\n    this.setState({ sum: total });\n  }\n\n  inputHandler({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  renderRating() {\n    this.setState({\n      showForm: true,\n    });\n  }\n\n  render() {\n    const { location: { state: { title, thumbnail, price, attributes } } } = this.props;\n    const { email, message, rating, showForm, sum } = this.state;\n    return (\n      <>\n        <div className=\"cart-screen\">\n          <span data-testid=\"shopping-cart-size\">{ sum }</span>\n          <Link\n            data-testid=\"shopping-cart-button\"\n            to=\"/cart\"\n          >\n            <button\n              type=\"button\"\n              className=\"cart-scree\"\n            >\n              <img src={ CartIcon } alt=\"\" width=\"20\" />\n            </button>\n          </Link>\n        </div>\n        <div className=\"name-item-detais\">\n          <h3 data-testid=\"product-detail-name\">{title}</h3>\n          <p>{ `R$ ${price.toLocaleString('pt-BR')}` }</p>\n        </div>\n        <div className=\"product-detail\">\n          <img src={ thumbnail } alt={ title } className=\"img-details\" />\n          <ul>\n            {attributes && attributes\n              .map((item, index) => (\n                <li key={ index }>\n                  {item.name}\n                  :\n                  {' '}\n                  {item.value_name}\n                </li>\n              ))}\n          </ul>\n        </div>\n        <button\n          type=\"button\"\n          className=\"button\"\n          data-testid=\"product-detail-add-to-cart\"\n          onClick={ this.handleClick }\n        >\n          Adicionar ao carrinho\n        </button>\n        <form className=\"form\">\n          <input\n            name=\"email\"\n            required\n            placeholder=\"Email\"\n            type=\"text\"\n            value={ email }\n            onChange={ this.inputHandler }\n          />\n          <textarea\n            name=\"message\"\n            placeholder=\"Message\"\n            data-testid=\"product-detail-evaluation\"\n            cols=\"30\"\n            rows=\"10\"\n            value={ message }\n            onChange={ this.inputHandler }\n          />\n          <label htmlFor=\"rating\">\n            1\n            <input\n              type=\"radio\"\n              id=\"1\"\n              name=\"rating\"\n              value=\"1\"\n              onChange={ this.inputHandler }\n            />\n          </label>\n          <label htmlFor=\"rating\">\n            2\n            <input\n              type=\"radio\"\n              id=\"2\"\n              name=\"rating\"\n              value=\"2\"\n              onChange={ this.inputHandler }\n            />\n          </label>\n          <label htmlFor=\"rating\">\n            3\n            <input\n              type=\"radio\"\n              id=\"3\"\n              name=\"rating\"\n              value=\"3\"\n              onChange={ this.inputHandler }\n            />\n          </label>\n          <label htmlFor=\"rating\">\n            4\n            <input\n              type=\"radio\"\n              id=\"4\"\n              name=\"rating\"\n              value=\"4\"\n              onChange={ this.inputHandler }\n            />\n          </label>\n          <label htmlFor=\"rating\">\n            5\n            <input\n              type=\"radio\"\n              id=\"5\"\n              name=\"rating\"\n              value=\"5\"\n              onChange={ this.inputHandler }\n            />\n          </label>\n          <button onClick={ this.renderRating } type=\"button\">Avaliar</button>\n        </form>\n        { showForm ? <Rating email={ email } msg={ message } rating={ rating } /> : null}\n      </>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  location: PropTypes.shape({\n    state: {\n      title: PropTypes.string,\n      thumbnail: PropTypes.string,\n      price: PropTypes.string,\n    },\n  }).isRequired,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/Products.css';\n\nclass ShoppingCart extends React.Component {\n  constructor() {\n    super();\n    this.state = { products: [], count: 0 };\n  }\n\n  componentDidMount() {\n    this.getItemLocalStorage();\n  }\n\n  getItemLocalStorage = () => {\n    const getProducts = { ...localStorage };\n    const arrayOfproducts = Object.values(getProducts).map((e) => JSON.parse(e));\n\n    this.setState({ products: arrayOfproducts, count: arrayOfproducts });\n  };\n\n  handleClick = ({ target: { id } }) => {\n    const product = JSON.parse(localStorage.getItem(id));\n    localStorage.setItem(id, JSON.stringify(product));\n    this.getItemLocalStorage();\n  };\n\n  handleDelete = ({ target: { id } }) => {\n    localStorage.removeItem(id);\n    this.getItemLocalStorage();\n  };\n\n  render() {\n    const { count } = this.state;\n    const { products } = this.state;\n\n    if (!products.length) {\n      return (\n        <p data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</p>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"div-cart\">\n          <h1>Carrinho</h1>\n          <p>\n            TOTAL: R$\n            {' '}\n            { Math.round(products.reduce(\n              (a, c) => a + (c.counter * c.price), 0,\n            ) * 100) / 100 }\n          </p>\n          <Link to={ { pathname: '/checkout' } }>\n            <button className=\"button\" data-testid=\"checkout-products\" type=\"button\">\n              Finalizar compra\n            </button>\n          </Link>\n        </div>\n        <ul className=\"cart-items\">\n          {products.map((\n            { title, price, thumbnail, id, availableQuantity, attributes },\n          ) => (\n            <li className=\"card\" key={ id }>\n              <button\n                className=\"button-delete\"\n                type=\"button\"\n                name=\"delete\"\n                id={ title }\n                onClick={ this.handleDelete }\n              >\n                Excluir\n              </button>\n              <Link\n                data-testid=\"product-detail-link\"\n                to={ {\n                  pathname: `/product/${id}`,\n                  state: { title,\n                    price,\n                    thumbnail,\n                    id,\n                    availableQuantity,\n                    attributes,\n                  },\n                } }\n              >\n                <div className=\"product\">\n\n                  <img src={ thumbnail } alt={ `Foto do produto ${title}` } />\n                  <h3 data-testid=\"shopping-cart-product-name\">{title}</h3>\n                  <p>{ `R$ ${price.toLocaleString('pt-BR')}` }</p>\n                </div>\n              </Link>\n              <div className=\"buttons-cart\">\n                <button\n                  data-testid=\"product-increase-quantity\"\n                  type=\"button\"\n                  className=\"button-sub-sum\"\n                >\n                  -\n                </button>\n                <p\n                  className=\"quantity\"\n                  data-testid=\"shopping-cart-product-quantity\"\n                >\n                  {count.find((item) => item.title === title).counter}\n                </p>\n                <button\n                  data-testid=\"product-decrease-quantity\"\n                  type=\"button\"\n                  className=\"button-sub-sum\"\n                >\n                  +\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default ShoppingCart;\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport Home from './Home';\nimport ProductDetails from './ProductDetails';\nimport ShoppingCart from './ShoppingCart';\nimport '../css/Section.css';\n\nclass Section extends Component {\n  render() {\n    return (\n      <div className=\"first\">\n        <Route exact path=\"/\" component={ Home } />\n\n        <Route path=\"/cart\" component={ ShoppingCart } />\n        <Route\n          path=\"/product/:id\"\n          render={ (props) => <ProductDetails { ...props } /> }\n        />\n      </div>\n    );\n  }\n}\n\nexport default Section;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Header from './components/Header';\nimport Section from './components/Section';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Router>\n          <Header />\n          <Section />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}