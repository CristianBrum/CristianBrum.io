{"version":3,"sources":["img/shopping-cart-solid.svg","img/bars-solid.svg","img/times-solid.svg","img/search-solid.svg","components/Header.js","services/api.js","components/Loading.js","components/CategoryList.js","components/ProductCard.js","components/ProductSearch.js","components/Home.js","components/Rating.js","components/ProductDetails.js","components/CartItem.js","components/ShoppingCart.js","components/Section.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","menuToggle","toggle","state","setState","this","className","onClick","aria-hidden","src","Menu","alt","width","to","Close","CartIcon","Component","getCategories","a","fetch","response","json","data","getProductsFromCategoryAndQuery","categoryId","query","Loading","CategoryList","categories","status","fetchApi","fetchProducts","props","map","category","htmlFor","id","key","data-testid","type","name","value","target","ProductCard","setItemStorage","bind","JSON","parse","localStorage","getItem","setItem","stringify","productInfo","products","title","thumbnail","price","push","console","log","pathname","toLocaleString","defaultProps","PropTypes","shape","ProductSearch","length","product","Home","request","api","dataProducts","dataApi","results","onSearchTextChange","event","placeholder","onChange","Search","Rating","email","msg","rating","message","ProductDetails","showForm","inputHandler","renderRating","location","required","cols","rows","CartItem","toFixed","ShoppingCart","window","React","Section","exact","path","component","render","App","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.d35ed9ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shopping-cart-solid.8bf1af37.svg\";","module.exports = __webpack_public_path__ + \"static/media/bars-solid.b3f49afd.svg\";","module.exports = __webpack_public_path__ + \"static/media/times-solid.2c5552a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/search-solid.c6a0effb.svg\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Menu from '../img/bars-solid.svg';\nimport Close from '../img/times-solid.svg';\nimport CartIcon from '../img/shopping-cart-solid.svg';\nimport '../css/Header.css';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      toggle: false,\n    };\n  }\n\n  menuToggle = () => {\n    const { toggle } = this.state;\n    this.setState({ toggle: !toggle });\n  }\n\n  render() {\n    // Aria-hidden:\n    // https://developers.google.com/web/fundamentals/accessibility/semantics-aria/hiding-and-updating-content?hl=pt-br\n    const { toggle } = this.state;\n    return (\n      <header>\n        <div className=\"menu\" onClick={ this.menuToggle } aria-hidden=\"true\">\n          <img src={ Menu } alt=\"\" width=\"20\" />\n        </div>\n        <div className=\"logo\">\n          <h1><Link to=\"/\">Mercado Livre</Link></h1>\n        </div>\n        <nav>\n          <ul className={ toggle ? 'toggle' : '' }>\n            <li><Link to=\"/home\">Home</Link></li>\n            <li><Link to=\"/product\">Produtos</Link></li>\n            <li><Link to=\"/contact\">Contato</Link></li>\n            <li><Link to=\"/about\">Sobre</Link></li>\n            <li><Link to=\"/login\">Login / Registro</Link></li>\n            <li className=\"close\" onClick={ this.menuToggle } aria-hidden=\"true\">\n              <img src={ Close } alt=\"\" width=\"20\" />\n            </li>\n          </ul>\n          <div className=\"nav-cart\">\n            <span>0</span>\n            <Link to=\"/cart\">\n              <img src={ CartIcon } alt=\"\" width=\"20\" />\n            </Link>\n          </div>\n        </nav>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","export async function getCategories() {\n  // Implemente aqui\n  const response = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const data = await response.json();\n  return data;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  // Implemente aqui! Quando o fizer, descomente os parâmetros que essa função recebe\n  const response = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n  const data = await response.json();\n  return data;\n}\n","import React, { Component } from 'react';\nimport '../css/Section.css';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className=\"loading\">\n        <img src=\"https://cdn.lowgif.com/small/0534e2a412eeb281-the-counterintuitive-tech-behind-netflix-s-worldwide.gif\" alt=\"loading\" />\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getCategories } from '../services/api';\nimport Loading from './Loading';\nimport '../css/Section.css';\n\nexport default class CategoryList extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      categories: [],\n      status: 'loading',\n    };\n  }\n\n  componentDidMount() {\n    this.fetchApi();\n  }\n\n  async fetchApi() {\n    const data = await getCategories();\n    this.setState({ categories: data, status: false });\n  }\n\n  render() {\n    const { categories, status } = this.state;\n    const { fetchProducts } = this.props;\n\n    if (status === 'loading') {\n      return <Loading />;\n    }\n\n    return (\n      <section className=\"category-section\">\n        <h1>Categorias:</h1>\n        { categories.map((category) => (\n          <label htmlFor={ category.id } key={ category.id } className=\"label-radio\">\n            <input\n              data-testid=\"category\"\n              type=\"radio\"\n              id={ category.id }\n              name=\"category\"\n              value={ category.id }\n              onClick={ ({ target: { value } }) => fetchProducts(value) }\n            />\n            { category.name }\n          </label>\n\n        ))}\n      </section>\n    );\n  }\n}\n\nCategoryList.propTypes = {\n  fetchProducts: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../css/Products.css';\n\nclass ProductCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setItemStorage = this.setItemStorage.bind(this);\n  }\n\n  componentDidMount() {\n    const productInfo = JSON.parse(localStorage.getItem('productInfos'));\n    if (!productInfo) {\n      localStorage.setItem('productInfos', JSON.stringify([]));\n    }\n  }\n\n  setItemStorage() {\n    const productInfo = JSON.parse(localStorage.getItem('productInfos'));\n    const { products } = this.props;\n    const { id, title, thumbnail, price } = products;\n    productInfo.push({\n      id,\n      title,\n      thumbnail,\n      price,\n    });\n    console.log(productInfo);\n    localStorage.setItem('productInfos', JSON.stringify(productInfo));\n  }\n\n  render() {\n    const { products } = this.props;\n    const { id, title, thumbnail, price } = products;\n\n    return (\n      <li className=\"card\">\n        <Link\n          to={ { pathname: `/product/${id}`, state: products } }\n          data-testid=\"product-detail-link\"\n        >\n          <div data-testid=\"product\" className=\"product\">\n            <img src={ thumbnail } alt={ `Foto do produto ${title}` } />\n            <h3>{ title }</h3>\n            <p>{ `R$ ${price.toLocaleString('pt-BR')}` }</p>\n          </div>\n        </Link>\n        <button\n          className=\"button\"\n          type=\"button\"\n          data-testid=\"product-add-to-cart\"\n          onClick={ this.setItemStorage }\n        >\n          Adicionar ao carrinho\n        </button>\n      </li>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  products: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    thumbnail: PropTypes.string,\n    price: PropTypes.number,\n  }),\n};\n\nProductCard.defaultProps = {\n  products: PropTypes.shape({\n    title: '',\n    thumbnail: '',\n    price: 0,\n  }),\n};\n\nexport default ProductCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ProductCard from './ProductCard';\n\nclass ProductSearch extends Component {\n  render() {\n    const { products } = this.props;\n    return (\n      <ul className=\"cart-items\">\n        { products.length === 0\n          ? <h4>Nenhum produto foi encontrado</h4>\n          : products.map((product) => (\n            <ProductCard\n              key={ product.id }\n              products={ product }\n            />\n          ))}\n      </ul>\n    );\n  }\n}\n\nProductSearch.propTypes = {\n  products: PropTypes.array,\n}.isRequired;\n\nProductSearch.defaultProps = {\n  products: [],\n};\n\nexport default ProductSearch;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as api from '../services/api';\nimport CategoryList from './CategoryList';\nimport ProductSearch from './ProductSearch';\nimport Search from '../img/search-solid.svg';\nimport '../css/Section.css';\nimport CartIcon from '../img/shopping-cart-solid.svg';\n\nexport default class Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      query: '',\n      categoryId: '',\n      dataApi: [],\n      request: false,\n    };\n\n    this.onSearchTextChange = this.onSearchTextChange.bind(this);\n    this.fetchProducts = this.fetchProducts.bind(this);\n  }\n\n  onSearchTextChange(event) {\n    const { target } = event;\n    this.setState({\n      query: target.value,\n    });\n  }\n\n  fetchProducts = async (id) => {\n    const { query, categoryId } = this.state;\n    this.setState({ request: true, categoryId: id },\n      async () => {\n        const dataProducts = await api.getProductsFromCategoryAndQuery(categoryId, query);\n        this.setState({\n          dataApi: dataProducts.results,\n          request: false,\n          query: '',\n        });\n      });\n  }\n\n  render() {\n    const { dataApi, request, query } = this.state;\n    return (\n      <>\n        <div className=\"cart-screen\">\n          <span>0</span>\n          <Link to=\"/cart\">\n            <button\n              type=\"button\"\n              className=\"cart-scree\"\n              data-testid=\"shopping-cart-button\"\n            >\n              <img src={ CartIcon } alt=\"\" width=\"20\" />\n            </button>\n          </Link>\n        </div>\n        <p className=\"info\" data-testid=\"home-initial-message\">\n          Digite algum termo de pesquisa ou escolha uma categoria.\n        </p>\n        <CategoryList fetchProducts={ this.fetchProducts } />\n\n        <section className=\"searchbar\">\n          <input\n            className=\"search-txt\"\n            placeholder=\"Search\"\n            data-testid=\"query-input\"\n            type=\"text\"\n            onChange={ this.onSearchTextChange }\n\n          />\n          <button\n            className=\"searchbar-btn\"\n            data-testid=\"query-button\"\n            type=\"button\"\n            onClick={ () => this.fetchProducts() }\n            query={ query }\n          >\n            <img src={ Search } alt=\"\" width=\"20\" />\n          </button>\n        </section>\n\n        <ProductSearch products={ dataApi } request={ request } />\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Rating extends Component {\n  constructor(props) {\n    super(props);\n    const { email, msg, rating } = this.props;\n    this.state = {\n      email,\n      message: msg,\n      rating,\n    };\n  }\n\n  render() {\n    const { email, message, rating } = this.state;\n    return (\n      <div>\n        <strong>{ email }</strong>\n        <p>{ message }</p>\n        <p>{ rating }</p>\n      </div>\n    );\n  }\n}\n\nRating.propTypes = {\n  email: PropTypes.string,\n  message: PropTypes.string,\n  rating: PropTypes.number,\n}.isRequired;\n\nexport default Rating;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Rating from './Rating';\n\nexport default class ProductDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      message: '',\n      rating: 0,\n      showForm: false,\n    };\n\n    this.setItemStorage = this.setItemStorage.bind(this);\n    this.inputHandler = this.inputHandler.bind(this);\n    this.renderRating = this.renderRating.bind(this);\n  }\n\n  componentDidMount() {\n    const productInfo = JSON.parse(localStorage.getItem('productInfos'));\n    if (!productInfo) {\n      localStorage.setItem('productInfos', JSON.stringify([]));\n    }\n  }\n\n  setItemStorage() {\n    const productInfo = JSON.parse(localStorage.getItem('productInfos'));\n    const { location: { state: { id, title, thumbnail, price } } } = this.props;\n    productInfo.push({\n      id,\n      title,\n      thumbnail,\n      price,\n    });\n    localStorage.setItem('productInfos', JSON.stringify(productInfo));\n  }\n\n  inputHandler({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  renderRating() {\n    this.setState({\n      showForm: true,\n    });\n  }\n\n  render() {\n    const { location: { state: { title, thumbnail, price } } } = this.props;\n    const { email, message, rating, showForm } = this.state;\n    return (\n      <>\n        <Link to=\"/cart\">\n          <button type=\"button\" data-testid=\"shopping-cart-button\">Carrinho</button>\n        </Link>\n        <h4 data-testid=\"product-detail-name\">{title}</h4>\n        <img src={ thumbnail } alt={ title } />\n        <span>\n          R$\n          { price }\n        </span>\n        <button\n          type=\"button\"\n          data-testid=\"product-detail-add-to-cart\"\n          onClick={ this.setItemStorage }\n        >\n          Adicionar ao carrinho\n        </button>\n        <form>\n          <input\n            name=\"email\"\n            required\n            placeholder=\"Email\"\n            type=\"text\"\n            value={ email }\n            onChange={ this.inputHandler }\n          />\n          <textarea\n            name=\"message\"\n            placeholder=\"Message\"\n            data-testid=\"product-detail-evaluation\"\n            cols=\"30\"\n            rows=\"10\"\n            value={ message }\n            onChange={ this.inputHandler }\n          />\n          <label htmlFor=\"rating\">\n            1\n            <input\n              type=\"radio\"\n              id=\"1\"\n              name=\"rating\"\n              value=\"1\"\n              onChange={ this.inputHandler }\n            />\n          </label>\n          <label htmlFor=\"rating\">\n            2\n            <input\n              type=\"radio\"\n              id=\"2\"\n              name=\"rating\"\n              value=\"2\"\n              onChange={ this.inputHandler }\n            />\n          </label>\n          <label htmlFor=\"rating\">\n            3\n            <input\n              type=\"radio\"\n              id=\"3\"\n              name=\"rating\"\n              value=\"3\"\n              onChange={ this.inputHandler }\n            />\n          </label>\n          <label htmlFor=\"rating\">\n            4\n            <input\n              type=\"radio\"\n              id=\"4\"\n              name=\"rating\"\n              value=\"4\"\n              onChange={ this.inputHandler }\n            />\n          </label>\n          <label htmlFor=\"rating\">\n            5\n            <input\n              type=\"radio\"\n              id=\"5\"\n              name=\"rating\"\n              value=\"5\"\n              onChange={ this.inputHandler }\n            />\n          </label>\n          <button onClick={ this.renderRating } type=\"button\">Avaliar</button>\n        </form>\n        { showForm ? <Rating email={ email } msg={ message } rating={ rating } /> : null}\n      </>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  location: PropTypes.shape({\n    state: {\n      title: PropTypes.string,\n      thumbnail: PropTypes.string,\n      price: PropTypes.string,\n    },\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class CartItem extends Component {\n  render() {\n    const { productInfo } = this.props;\n    const { title, thumbnail, price } = productInfo;\n    return (\n      <li>\n        <h5 data-testid=\"shopping-cart-product-name\">{ title }</h5>\n        <div>\n          <img src={ thumbnail } alt={ title } />\n          <span>{ `R$ ${price.toFixed(2)}` }</span>\n        </div>\n        <div>\n          <button type=\"button\">+</button>\n          <button type=\"button\">-</button>\n          <button type=\"button\">Remover</button>\n        </div>\n      </li>\n    );\n  }\n}\n\nCartItem.propTypes = {\n  productInfo: PropTypes.shape({\n    title: PropTypes.string,\n    thumbnail: PropTypes.string,\n    price: PropTypes.number,\n  }).isRequired,\n};\n","import React from 'react';\nimport CartItem from './CartItem';\n\nclass ShoppingCart extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      productInfo: JSON.parse(localStorage.getItem('productInfos')),\n    };\n  }\n\n  render() {\n    const { productInfo } = this.state;\n    if (window.localStorage.length === 0) {\n      return (\n        <h1 data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</h1>\n      );\n    }\n    return (\n      <ul>\n        { productInfo.map((product) => (\n          <CartItem productInfo={ product } key={ product.id } />\n        )) }\n        <h2>Total:</h2>\n        <span data-testid=\"shopping-cart-product-quantity\">\n          Quantidade de Produtos:\n          { productInfo.length }\n        </span>\n      </ul>\n    );\n  }\n}\n\nexport default ShoppingCart;\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport Home from './Home';\nimport ProductDetails from './ProductDetails';\nimport ShoppingCart from './ShoppingCart';\nimport '../css/Section.css';\n\nclass Section extends Component {\n  render() {\n    return (\n      <div className=\"first\">\n        <Route exact path=\"/\" component={ Home } />\n\n        <Route path=\"/cart\" component={ ShoppingCart } />\n        <Route\n          path=\"/product/:id\"\n          render={ (props) => <ProductDetails { ...props } /> }\n        />\n      </div>\n    );\n  }\n}\n\nexport default Section;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Header from './components/Header';\nimport Section from './components/Section';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Router>\n          <Header />\n          <Section />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}